package bd

/*
🔥 Funciones de crear un archivo

	💧 os.Create -> Crea un archivo con los permisos 0666
	https://pkg.go.dev/os#Create

	💧 os.CreateTemp -> Crea un archivo temporal, despues hay que borrarlo
	https://pkg.go.dev/os#CreateTemp

🔥 Funciones de abrir archivo

	💧 os.Open -> Abrir de forma basica
	https://pkg.go.dev/os#Open

	💧 os.OpenFile -> Abrir de manera personalizada
	https://pkg.go.dev/os#OpenFile

	💧 os.ReadFile -> Abre y lee el archivo
	https://pkg.go.dev/os#ReadFile

	💧 os.WriteFile -> Abre y escribe en el archivo
	https://pkg.go.dev/os#WriteFile



🔥 Funciones de puntero

	https://pkg.go.dev/os#File.Seek
	Seek establece el desplazamiento para la siguiente lectura o 
	escritura en el archivo a desplazamiento

🔥 Funciones de leer archivo

	💧 os.file.Read -> Lee n bytes de un archivo 
	https://pkg.go.dev/os#File.Read

	💧 os.file.ReadAt -> Lee n bytes comenzando en el byte n
	https://pkg.go.dev/os#File.ReadAt

	💧 os.file.ReadFrom -> Crea un io.Reader
	https://pkg.go.dev/os#File.ReadFrom


🔥 Funciones de leer un directorio relativas al archivo abierto 

	💧 os.ReadDir -> Abre un directorio y lista el directorio.
	https://pkg.go.dev/os#ReadDir
	
	💧 os.file.ReadDir -> ReadDir lee el contenido del directorio asociado 
	con el archivo f y devuelve una porción de los valores de 
	DirEntry en el orden del directorio.
	https://pkg.go.dev/os#File.ReadDir

	💧 os.file.Readdir -> Readdir lee el contenido del directorio asociado 
	con el archivo y devuelve una porción de hasta n valores FileInfo, 
	como los devolvería Lstat, en orden de directorio. 
	https://pkg.go.dev/os#File.Readdir

	💧 os.file.Readdirnames -> Readdirnames lee el contenido del 
	directorio asociado con el archivo y devuelve una porción 
	de hasta n nombres de archivos en el directorio, en orden 
	de directorio.
	https://pkg.go.dev/os#File.Readdirnames



🔥 Funciones de escribir un archivo

	os.File.Write -> Escribe en un archivo
	https://pkg.go.dev/os#File.Write

	os.File.WriteAt -> Escribe en un archivo desde el n byte
	https://pkg.go.dev/os#File.WriteAt

	os.file.WriteString -> Escribe directamente una cadena en vez de 
	bytes
	https://pkg.go.dev/os#File.WriteString


🔥 Cerrar el archivo

	https://pkg.go.dev/os#File.Close
	Cierra un archivo

	https://pkg.go.dev/os#File.Sync
	obligará al sistema de archivos a vaciar sus búferes en el disco


🔥 Eliminar archivo o directorio

	https://pkg.go.dev/os#Remove
	Remove elimina el archivo nombrado o el directorio (vacío). 

	https://pkg.go.dev/os#RemoveAll
	RemoveAll elimina la ruta y los elementos secundarios que contiene.

	https://pkg.go.dev/os#Truncate
	Truncar cambia el tamaño del archivo nombrado. 


🔥 Plazos para leer y escribir archivos

	💧 os.file.SetReadDeadline -> SetDeadline establece los plazos 
	de lectura y escritura de un archivo. 
	https://pkg.go.dev/os#File.SetDeadline

	💧 os.file.SetReadDeadline -> SetReadDeadline establece los plazos 
	de lectura de un archivo. 
	https://pkg.go.dev/os#File.SetReadDeadline

	💧 os.file.SetWriteDeadline -> SetWriteDeadline establece los plazos 
	de escritura de un archivo. 
	https://pkg.go.dev/os#File.SetWriteDeadline

🔥 Operaciones en directorio y archivo

	os.Chmod -> Cambia los permisos de un arhivo
	https://pkg.go.dev/os#Chmod

	https://pkg.go.dev/os#Rename
	Rename cambia el nombre (mueve) oldpath a newpath. 

	os#Chtimes -> Chtimes cambia los tiempos de acceso y modificación 
	del archivo nombrado
	https://pkg.go.dev/os#Chtimes


🔥 Operaciones de directorio
	
	https://pkg.go.dev/os#Mkdir
	Mkdir crea un nuevo directorio con el nombre especificado y 
	los bits de permiso (antes de umask).

	https://pkg.go.dev/os#MkdirAll
	MkdirAll crea un directorio llamado ruta, junto con los padres 
	necesarios, y devuelve nil, o bien devuelve un error.

	https://pkg.go.dev/os#MkdirTemp
	MkdirTemp crea un nuevo directorio temporal en el directorio dir 
	y devuelve el nombre de ruta del nuevo directorio. 

	os.Chdir -> Chdir cambia el directorio de trabajo actual al 
	directorio nombrado. 
	https://pkg.go.dev/os#Chdir

	os.DirFS -> devuelve un sistema de archivos
	https://pkg.go.dev/os#DirFS

	https://pkg.go.dev/os#Getwd
	Getwd devuelve un nombre de ruta raíz correspondiente al directorio 
	actual.



🔥 Operaciones de archivo

	https://pkg.go.dev/os#SameFile
	SameFile informa si fi1 y fi2 describen el mismo archivo. 

	https://pkg.go.dev/os#Chown
	Chown cambia el uid numérico y el gid del archivo nombrado. 

	https://pkg.go.dev/os#Lchown
	Lchown cambia el uid y el gid numéricos del archivo nombrado.


🔥 Enlaces Simbolicos

	https://pkg.go.dev/os#Link
	enlace crea un nuevo nombre como un enlace fijo al archivo 
	de nombre antiguo.

	https://pkg.go.dev/os#Symlink
	Symlink crea newname como un enlace simbólico a oldname.

	https://pkg.go.dev/os#Readlink
	Readlink devuelve el destino del enlace simbólico nombrado. 



🔥 Informacion 

	https://pkg.go.dev/os#Lstat
	Lstat devuelve un FileInfo que describe el archivo nombrado. 

	https://pkg.go.dev/os#Stat
	Stat devuelve un FileInfo que describe el archivo nombrado. 

	https://pkg.go.dev/os#File.Stat
	Stat devuelve la estructura FileInfo que describe el archivo. 

	https://pkg.go.dev/os#File.Name
	Nombre devuelve el nombre del archivo tal como se presenta en Abrir.

	https://pkg.go.dev/os#IsPathSeparator
	IsPathSeparator informa si c es un carácter separador de directorio.

	https://pkg.go.dev/os#TempDir
	TempDir devuelve el directorio predeterminado para usar con 
	archivos temporales.

	https://pkg.go.dev/os#UserCacheDir
	UserCacheDir devuelve el directorio raíz predeterminado que 
	se utilizará para los datos almacenados en caché específicos 
	del usuario. 

	https://pkg.go.dev/os#UserConfigDir
	UserConfigDir devuelve el directorio raíz predeterminado 
	que se utilizará para los datos de configuración específicos 
	del usuario.

	https://pkg.go.dev/os#UserHomeDir
	UserHomeDir devuelve el directorio de inicio del usuario actual.

	https://pkg.go.dev/os#Getuid
	Getuid devuelve la identificación de usuario numérica de 
	la persona que llama.

	https://pkg.go.dev/os#Geteuid
	Geteuid devuelve la identificación de usuario efectiva 
	numérica de la persona que llama.

	https://pkg.go.dev/os#Getegid
	Getegid devuelve el ID de grupo efectivo numérico de la persona 
	que llama.

	https://pkg.go.dev/os#Getgid
	Getgid devuelve el ID de grupo numérico de la persona que llama.

	https://pkg.go.dev/os#Getgroups
	Getgroups devuelve una lista de los identificadores numéricos de los 
	grupos a los que pertenece la persona que llama.
	

🔥 Variables de entorno

	https://pkg.go.dev/os#Setenv
	Setenv establece el valor de la variable de entorno nombrada 
	por la clave.

	https://pkg.go.dev/os#Getenv
	Getenv recupera el valor de la variable de entorno nombrada por 
	la clave. 

	https://pkg.go.dev/os#Unsetenv
	Unsetenv desarma una única variable de entorno.

	https://pkg.go.dev/os#LookupEnv
	LookupEnv recupera el valor de la variable de entorno nombrada 
	por la clave.

	os.Environ -> devuelve una copia de las cadenas que representan 
	el entorno
	https://pkg.go.dev/os#Environ

	https://pkg.go.dev/os#Expand
	reemplaza ${var} o $var en la cadena según la función de mapeo. 

	https://pkg.go.dev/os#ExpandEnv
	ExpandEnv reemplaza ${var} o $var en la cadena según los valores 
	de las variables de entorno actuales.


🔥 Avanzado ejecutables

	os.Executable -> devuelve el nombre de la ruta del ejecutable que 
	inició el proceso actual
	https://pkg.go.dev/os#Executable

	https://pkg.go.dev/os#Getpid
	Getpid devuelve la identificación del proceso de la persona que 
	llama.

	https://pkg.go.dev/os#Getppid
	Getppid devuelve la identificación del proceso del padre de 
	la persona que llama.


🔥 Avanzado descriptores de archivo


	💧 os.NewFile -> Crea un nuevo archivo con el descriptor de 
	archivo y el nombre dados.
	https://pkg.go.dev/os#NewFile
	Ejemplo
	https://blog.csdn.net/TCatTime/article/details/115444685
	Ejemplo socket
	https://www.socketloop.com/tutorials/golang-syscall-socket-example

	https://pkg.go.dev/os#File.Fd
	Fd devuelve el descriptor de archivo Unix entero que hace 
	referencia al archivo abierto.

	https://pkg.go.dev/os#File.SyscallConn
	SyscallConn devuelve un archivo sin formato.

	🔥 Descriptores de archivos Unix
	Documentacion linux
	https://www.kernel.org/doc/man-pages/

	💧Pread - Leer un descriptor
	https://pkg.go.dev/golang.org/x/sys@v0.0.0-20220325203850-36772127a21f/unix#Pread
	https://pkg.go.dev/golang.org/x/sys@v0.0.0-20220325203850-36772127a21f/unix#Preadv
	https://pkg.go.dev/golang.org/x/sys@v0.0.0-20220325203850-36772127a21f/unix#Preadv2

	💧Pwrite - escribe en un descriptor
	https://pkg.go.dev/golang.org/x/sys@v0.0.0-20220325203850-36772127a21f/unix#Pwrite
	https://pkg.go.dev/golang.org/x/sys@v0.0.0-20220325203850-36772127a21f/unix#Pwritev
	https://pkg.go.dev/golang.org/x/sys@v0.0.0-20220325203850-36772127a21f/unix#Pwritev2
	
	💧Bloquear un puntero
	https://pkg.go.dev/golang.org/x/sys@v0.0.0-20220325203850-36772127a21f/unix#Flock

🔥 Avanzado tuberias

	https://pkg.go.dev/os#Pipe
	Pipe devuelve un par de archivos conectados; lee de r 
	devuelve bytes escritos en w. 

🔥 Otros

	https://pkg.go.dev/os#Hostname
	devuelve el nombre de host informado por el kernel.

	https://pkg.go.dev/os#Getpagesize
	Getpagesize devuelve el tamaño de página de memoria del 
	sistema subyacente.

	os.Exit -> Finalizacion del programa con un codigo de estado
	https://pkg.go.dev/os#Exit

🔥 Errores

	https://pkg.go.dev/os#NewSyscallError
	NewSyscallError devuelve, como un error, un nuevo SyscallError 
	con el nombre de la llamada al sistema y los detalles del error dados. 

	https://pkg.go.dev/os#IsExist
	IsExist devuelve un booleano que indica si se conoce el error 
	para informar que un archivo o directorio ya existe. 

	https://pkg.go.dev/os#IsNotExist
	IsNotExist devuelve un valor booleano que indica si se conoce 
	el error para informar que un archivo o directorio no existe. 

	https://pkg.go.dev/os#IsPermission
	IsPermission devuelve un booleano que indica si se conoce el 
	error para informar que se denegó el permiso. 

	https://pkg.go.dev/os#IsTimeout
	IsTimeout devuelve un valor booleano que indica si se conoce 
	el error para informar que se agotó el tiempo de espera.



🌐 Modos de abrir un directorio o escribir en un archivo
	
Estas constantes son usadas por estas funciones:
												WriteFile
												Mkdir
												MkdirAll

	ModeDir        FileMode = 1 << (32 - 1 - iota) // d: is a directory
	ModeAppend           // a: append-only
	ModeExclusive        // l: exclusive use
	ModeTemporary        // T: temporary file; Plan 9 only
	ModeSymlink          // L: symbolic link
	ModeDevice           // D: device file
	ModeNamedPipe        // p: named pipe (FIFO)
	ModeSocket           // S: Unix domain socket
	ModeSetuid           // u: setuid
	ModeSetgid           // g: setgid
	ModeCharDevice       // c: Unix character device, when ModeDevice is set
	ModeSticky           // t: sticky
	ModeIrregular        // ?: non-regular file; nothing else is known about this file


🌐 Debe especificarse exactamente uno de O_RDONLY, O_WRONLY o O_RDWR.
	Estas constantes son usadas por estas funciones:
													OpenFile
													Chmod

	💡 abre el archivo de solo lectura.
	O_RDONLY int = syscall.O_RDONLY  
	💡 abre el archivo de solo escritura.
	O_WRONLY int = syscall.O_WRONLY  
	💡abre el archivo de lectura y escritura.
	O_RDWR int = syscall.O_RDWR      

🌐 Los valores restantes pueden introducirse para controlar el 
comportamiento.
	🔮 Agrega datos al final del archivo al escribir.
	O_APPEND int = syscall.O_APPEND 
	🔮 crea un nuevo archivo si no existe ninguno, si existe entonces 
	abre el archivo.
	O_CREATE int = syscall.O_CREAT
	🔮 usado con O_CREATE, si el archivo existe devuelve un error
	O_EXCL int = syscall.O_EXCL   
	🔮 abierto para E / S síncronas.
	O_SYNC int = syscall.O_SYNC  
	🔮 truncar o vaciar el archivo cuando se abre.
	O_TRUNC int = syscall.O_TRUNC

🌐Permisos unix


🌐Patch constantes
	🔋 separador de ruta específico del sistema operativo
	PathSeparator = '/'
	separador de lista de ruta específico del sistema operativo
	🔋 PathListSeparator = ':' 




